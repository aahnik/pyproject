{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pyproject A highly opinionated but generic python project template for building a wide range of python applications or libraries.","title":"Home"},{"location":"#pyproject","text":"A highly opinionated but generic python project template for building a wide range of python applications or libraries.","title":"pyproject"},{"location":"getting_started/","text":"Getting started Requirements Have the following installed in your system. A basic knowledge of the following is expected. a bash or zsh shell git (scm) make (used to automate running long commands) python (python 3.9) (the programming language) docker (containerization tool) poetry (python dependancy management and packaging) gh (cli of GitHub , a popular source host) Vs code (code editor) Setup Create a new repo from this template Clone your repo and move into the project directory For poetry use config virtualenvs.in-project = true Run poetry install Run poetry shell (activate virtual environment) Run pre-commit install to install all pre-commit hooks Run code . to open in vscode.","title":"Getting started"},{"location":"getting_started/#getting-started","text":"","title":"Getting started"},{"location":"getting_started/#requirements","text":"Have the following installed in your system. A basic knowledge of the following is expected. a bash or zsh shell git (scm) make (used to automate running long commands) python (python 3.9) (the programming language) docker (containerization tool) poetry (python dependancy management and packaging) gh (cli of GitHub , a popular source host) Vs code (code editor)","title":"Requirements"},{"location":"getting_started/#setup","text":"Create a new repo from this template Clone your repo and move into the project directory For poetry use config virtualenvs.in-project = true Run poetry install Run poetry shell (activate virtual environment) Run pre-commit install to install all pre-commit hooks Run code . to open in vscode.","title":"Setup"},{"location":"notes/","text":"Note Tools used Dockerfile The Dockerfile copies the tests/ directory from the host to image's filesystem. It also runs poetry install which will install development dependancies as well. You may choose not to copy the tests/ directory and you may install only the dependancies required by the application, by running poetry install --no-dev I choose to include the tests and dev dependancies as well because the size of that is relatively small. This also helps to test the the application in the docker environment. (that is very important) suppose your python application starts using chromedriver which is already installed in your system. So running tox in your system, passes all tests. But you forgot to include a line in the Dockerfile that will install chromedriver , but The build will still be succesful, but your application will fail to run in production. To run tests inside the container shell docker run -it pyproject poetry run pytest More details to be added soon!","title":"Note"},{"location":"notes/#note","text":"Tools used","title":"Note"},{"location":"notes/#dockerfile","text":"The Dockerfile copies the tests/ directory from the host to image's filesystem. It also runs poetry install which will install development dependancies as well. You may choose not to copy the tests/ directory and you may install only the dependancies required by the application, by running poetry install --no-dev I choose to include the tests and dev dependancies as well because the size of that is relatively small. This also helps to test the the application in the docker environment. (that is very important) suppose your python application starts using chromedriver which is already installed in your system. So running tox in your system, passes all tests. But you forgot to include a line in the Dockerfile that will install chromedriver , but The build will still be succesful, but your application will fail to run in production. To run tests inside the container shell docker run -it pyproject poetry run pytest More details to be added soon!","title":"Dockerfile"}]}